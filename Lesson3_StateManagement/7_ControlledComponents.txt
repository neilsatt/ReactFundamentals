Controlled Components - allow you to hook up the forms in your application to your component state. 
A component which renders a form, but the source of truth for that form state lives inside of the component
state rather than inside of the DOM. 


Note that the value attribute is set on the <input> element. Our displayed value will always be the value in the component's state, 
making our state the "single source of truth."

Because it is React that ultimately controls the value of our input form element, we consider this component a Controlled Component.

To recap how user input affects the ListContacts component's own state:

The user enters text into the input field.
An event listener invokes the updateQuery() function on every onChange event.
updateQuery() then calls setState(), merging in the new state to update the component's internal state.
Because its state has changed, the ListContacts component re-renders.


Which benefit applies to Controlled Components that doesn't apply to "uncontrolled" components?
- Controlled Components allow you to update your UI based on the form itself


Which of the following is true about Controlled Components?

    Each update to state has an associated handler function
    Form elements receive their current value via an attribute
    Form input values are generally stored in the component's state
    Event handlers for a controlled element update the component's state
    
    
Controlled Components Recap
Controlled components refer to components that render a form, but the "source of truth" for that form state lives inside of the component state rather than inside of the DOM. The benefits of Controlled Components are:

instant input validation
conditionally disable/enable buttons
enforce input formats
In our ListContacts component, not only does the component render a form, but it also controls what happens in that form based on user input. In this case, event handlers update the component's state with the user's search query. And as we've learned: any changes to React state will cause a re-render on the page, effectively displaying our live search results.